<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hzbank.spring.dao.UserDao">
    <!-- User的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_User_Map" type="com.hzbank.spring.entity.User">
        <id column="id" property="id" />
        <result column="name" property="name" />
        <result column="age" property="age" />
    </resultMap>

    <!--开启二级缓存，交给memcached管理-->
    <cache type="org.mybatis.caches.memcached.LoggingMemcachedCache" />

    <!-- 数据库中表名为:t_user的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="t_user_Column">
        id,name,age
    </sql>

    <!--获得类名为:User对应的数据库表的数据总行数 -->
    <select id="getUserRowCount" resultType="java.lang.Long">
        select count(id) from t_user
    </select>
    <!-- 获得类名为:User对应数据库中表的数据集合 -->
    <select id="selectUser" resultMap="result_User_Map">
        select 
        <include refid="t_user_Column" /> 
        from t_user
    </select> 

    <!-- 获得一个User对象,以参数User对象中不为空的属性作为条件进行查询-->
    <select id="selectUserByObj" parameterType="com.hzbank.spring.entity.User" resultMap="result_User_Map">
        select 
            <include refid="t_user_Column" /> 
        from t_user
        <where>
            <if test="age != null "> and t_user.age = #{age}</if>
            <if test="name != null "> and t_user.name = #{name}</if>
            <if test="id != null "> and t_user.id = #{id}</if>
        </where>
    </select> 

    <!-- 通过User的id获得对应数据库中表的数据对象-->
    <select id="selectUserById" parameterType="java.lang.Integer" resultMap="result_User_Map">
        select 
            <include refid="t_user_Column" /> 
        from t_user
        where t_user.id = #{id}
    </select> 

    <!-- 将User插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertUser" parameterType="com.hzbank.spring.entity.User">
        insert into t_user(id,name,age) 
        values(0,#{name},#{age})
    </insert>

    <!-- 将User中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyUser" parameterType="com.hzbank.spring.entity.User">
        insert into t_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="name != null">name,</if>
            <if test="age != null">age,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id},</if>
            <if test="name != null"> #{name},</if>
            <if test="age != null"> #{age},</if>
        </trim>
    </insert>

    <!-- 通过User的id将数据库表中对应的数据删除-->
    <delete id="deleteUserById" parameterType="java.lang.Integer">
        delete from t_user
        where id = #{id}
    </delete>

    <!-- 通过User的id将User的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateUserById" parameterType="com.hzbank.spring.entity.User">
        update t_user set
            name=#{name}
            ,age=#{age}
        where id=#{id}
    </update>

    <!-- 通过User的id将User中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyUserById" parameterType="com.hzbank.spring.entity.User">
        update t_user
        <set>
            <if test="name != null">
                name=#{name},
            </if>
            <if test="age != null">
                age=#{age},
            </if>
        </set>
        where id=#{id}
    </update>

    <!--查询出所有用户的id-->
    <select id="selectAllId" resultType="java.lang.Integer">
        select id from t_user WHERE id <![CDATA[<>]]> #{id}
    </select>

    <!--分页展示-->
    <select id="selectAllByPage" resultMap="result_User_Map">
        select * from t_user limit #{start},#{rows }
    </select>


    <!--批量删除-->
    <delete id="deleteMany">
        delete from t_user where id in
        <foreach collection="array" open="(" separator="," item="ids" close=")">
            #{ids}
        </foreach>
    </delete>

    <!--批量插入-->
    <insert id="insertMany">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_user (id,name,age) values
        <foreach collection="list" separator="," index="index" item="item">
            (0,#{item.name},#{item.age})
        </foreach>
    </insert>

</mapper>